#!/bin/bash

# *********************************************************************
# This script assumes .bashrc is in the form used by Debian and Ubuntu.
# It has only been tested on these, and I'm sure it would muck up
# your .bashrc if you run it on a non-Debian system.
# It also runs aptitude, which would (obviously) cause problems on a 
# non-debian system.
# 
# 
# This script:
#   installs the prerequisites for compiling Ruby (if needed)
#   then installs Ruby
#   Then installs rvm
#   then modifies the user's .bashrc
# 
# Okay, that's not saying much. rvm is easy enough to install on your own.
# But it's nice to have a script do it for you and take care of modifying
# .bashrc.
#
# Run this as a normal user.
# If this is run as a standalone script, the sudo line below
# may prompt for your password (to install prerequisites).
# *********************************************************************


# If we're running this as a standalone script (that is, if we're 
# not running it from the install_og scripts), then
# the variable USERHOMEDIR won't be defined.
# In that case, define it, and install rvm's prerequisites.
if [ -z $USERHOMEDIR ]
then
  USERHOMEDIR="/home/$USER"
fi



# .bashrc has to be modified for rvm.
# Only modify the file if it hasn't already been modified
# So, first check if it contains a mention of this script
# This should only run if install_if_necessary doesn't see
# and existing rvm ... but it doesn't hurt to make sure.
modify_bashrc()
{
	# Check .bashrc for mention of "install_rvm"
	if ! grep install_rvm $USERHOMEDIR/.bashrc
	then
		sed  's/^\[.*return$/if [[ -n "\$PS1" ]] ; then/g' $USERHOMEDIR/.bashrc > $USERHOMEDIR/bashrc_tmp.tmp
		echo '' >> $USERHOMEDIR/bashrc_tmp.tmp
		echo '# The following lines were added by install_rvm' >> $USERHOMEDIR/bashrc_tmp.tmp
		echo 'fi' >> $USERHOMEDIR/bashrc_tmp.tmp
		echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"  # This loads RVM into a shell session.'  >> $USERHOMEDIR/bashrc_tmp.tmp
		rm -f $USERHOMEDIR/.bashrc
		mv $USERHOMEDIR/bashrc_tmp.tmp $USERHOMEDIR/.bashrc
	else
		echo 'It looks like install_rvm has already modified .bashrc, so nothing was changed.'
	fi
}

# Install rvm
installrvm() 
{
  sudo aptitude install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev

  cd $USERHOMEDIR


	# Break the install script into its parts, and run them:
	# first, download the install script
	curl https://rvm.beginrescueend.com/install/rvm > $USERHOMEDIR/rvm-install
	# Then run it
	chmod +x $USERHOMEDIR/rvm-install
	$USERHOMEDIR/rvm-install
	# Then delete it
	rm -f $USERHOMEDIR/rvm-install-head

	# We've got rvm. Now load it.
	source $USERHOMEDIR/.rvm/scripts/rvm


  # Installing ree should be brought out into its own function
  # in case the user already had rvm installed but not ree-1.8.7.
	rvm install ree-1.8.7
	rvm --default use ree-1.8.7
	rvm use ree-1.8.7

	rvm gemset use global
	gem install bundler
}

# Check if rvm is already installed. 
# If not, install it
install_if_necessary()
{
if [ -d $USERHOMEDIR/.rvm ] 
then 
	echo "rvm exists, so the script didn't run."
else
	installrvm
  modify_bashrc
	echo "Remember to log out and back in before using rvm"
fi
}


# Now run the script
install_if_necessary

